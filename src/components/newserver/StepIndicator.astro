---
// StepIndicator.astro - Step indicator component with Material Icons
interface Props {
  steps: {
    name: string;
    value: string | number;
    icon?: string; // Optional icon name from Material Icons
  }[];
}

const { steps } = Astro.props;
---

<div class="step-indicator">
  {steps.map((step, index) => (
    <div class="step-indicator-item" data-step={index + 1}>
      <div class="step-icon-container">
        <span class="step-icon material-symbols-rounded">
          {step.icon || 'radio_button_unchecked'}
        </span>
        <span class="step-check material-symbols-rounded">
          check_circle
        </span>
        <span class="step-number">{index + 1}</span>
      </div>
      <span class="step-name">{step.name}</span>
      {index < steps.length - 1 && <div class="step-connector"></div>}
    </div>
  ))}
</div>

<style>
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }

  @keyframes rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }
  @keyframes gradientShift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  /* Keyframes for Glow Effect */
  @keyframes glowPulse {
    0%, 100% {
      filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.24));
    }
    50% {
      filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.555));
    }
  }

  .step-indicator {
    display: flex;
    justify-content: space-between;
    margin: 2rem 0;
    position: relative;
    width: 100%;
  }

  .step-indicator-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    flex: 1;
    text-align: center;
    z-index: 1;
  }

  .step-icon-container {
    position: relative;
    width: 3rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 0.5rem;
    border-radius: 50%;
    background-color: #F3F4F6; /* bg-gray-100 */
    transition: all 0.3s ease;
  }

  .step-indicator-item.active .step-icon-container {
    background-color: #DBEAFE; /* bg-blue-100 */
    animation: gradientShift 8s ease infinite, glowPulse 2s ease infinite;
  }

  .step-indicator-item.completed .step-icon-container {
    background-color: #DCFCE7; /* bg-green-100 */
  }

  .step-icon {
    color: #9CA3AF; /* text-gray-400 */
    transition: all 0.3s ease;
  }

  .step-indicator-item.active .step-icon {
    color: #2563EB; /* text-blue-600 */
    display: block;
  }

  .step-indicator-item.completed .step-icon {
    display: none;
  }

  .step-check {
    display: none;
    color: #10B981; /* text-green-500 */
  }

  .step-indicator-item.completed .step-check {
    display: block;
    animation: rotate 0.5s ease-in-out;
  }

  .step-number {
    position: absolute;
    font-size: 0.75rem;
    font-weight: 600;
    display: none;
  }

  .step-name {
    font-size: 0.875rem;
    font-weight: 500;
    color: #4B5563; /* text-gray-600 */
    margin-top: 0.25rem;
    transition: all 0.3s ease;
  }

  .step-indicator-item.active .step-name {
    font-weight: 600;
    animation: bounce 2s;
  }

  .step-indicator-item.completed .step-name {
    color: #047857; /* text-green-700 */
  }

  .step-connector {
    position: absolute;
    top: 1.5rem;
    left: 50%;
    width: 100%;
    height: 0.125rem;
    background-color: #E5E7EB; /* bg-gray-200 */
    z-index: -1;
    transition: all 0.3s ease;
  }

  .step-indicator-item.completed .step-connector {
    background-color: #10B981; /* bg-green-500 */
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .step-name {
      font-size: 0.75rem;
    }
    
    .step-icon-container {
      width: 2.5rem;
      height: 2.5rem;
    }
    
    .material-symbols-rounded {
      font-size: 1.25rem;
    }
  }
</style>