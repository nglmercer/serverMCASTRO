---
// import StatusIndicator from './StatusIndicator.astro'; // Ya no lo necesitas aquí para la lista
import CPopup from '@components/solid/solid.tsx'; // CPopup es CPopup.solid.tsx? Asumiré que sí.
import ServerList from '@components/solid/ServerList.solid.tsx'; // Importa tu nuevo componente
---

<!-- El div que contendrá la lista generada por SolidJS -->
<ServerList client:only="solid-js" />

<!-- Tu CPopup sigue igual, pero su activación será manejada desde ServerList.solid.tsx -->
<CPopup id="serverOptions" class="serverModal_0 material-symbols-rounded server-card" client:load />

<style>
/* Asegúrate que los estilos de server-card y otros alcancen a los elementos generados por Solid */
.server-card {
  border: 1px solid #eee;
  margin-bottom: 1rem;
  border-radius: 8px;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
.server-card .p-10 { /* Si usas Tailwind, p-10 es mucho, quizás quisiste p-4 o p-6? */
  padding: 1.5rem; /* Ejemplo con padding más común */
}
.flex.center {
  display: flex;
  align-items: center; /* center verticalmente */
  /* justify-content: center; /* center horizontalmente si es necesario */
}
.more-options {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
}
.more-options:hover {
  background-color: rgba(0,0,0,0.05);
}
.material-symbols-rounded {
  font-variation-settings:
  'FILL' 0,
  'wght' 400,
  'GRAD' 0,
  'opsz' 24;
  vertical-align: middle; /* Ayuda a alinear iconos */
}
</style>

<script>
// Ya no necesitas el script de fetch aquí si ServerList.solid.tsx lo maneja.
// Si quieres pasar datos iniciales a ServerList, podrías hacerlo como props,
// pero para renderizado completamente en cliente, es mejor que el componente SolidJS haga el fetch.
</script>