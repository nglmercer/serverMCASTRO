---
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro Basics</title>
		<link rel="stylesheet" href="/global.css">
		<script src="/src/litcomponents/init.ts"></script>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
		<link rel="stylesheet" href="/materialSymbols.css"/>
	</head>
	<body>
		<task-notifications id="my-notifications"></task-notifications>
		<slot />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
<script>
/* 	import { TaskNotifications } from "src/litcomponents/notify";
	const notifications = document.querySelector("task-notifications") as TaskNotifications;
		function initNotifications() {
		//test
		if (!notifications) {
			return;
		}
		notifications.updateTasks({
			"task-1": { // Using more descriptive IDs
				filename: "Initial_Report.pdf",
				progress: 75,
				status: "downloading",
				type: "downloading"
			},
			"task-2": {
				filename: "System_Update.pkg",
				progress: 30,
				status: "processing",
				type: "downloading" // type might be 'update' or similar if not strictly a download
			},
			"task-3": {
				filename: "User_Agreement.docx",
				status: "completed", // No progress needed if completed
			},
			"task-4": {
				filename: "Critical_Patch.exe",
				progress: 10, // Show some progress before failure
				status: "failed",
			}
		});
		console.log("initNotifications",notifications);
	}
	document.addEventListener("DOMContentLoaded", () => {
		setTimeout(initNotifications, 1000);
	}); */
</script>